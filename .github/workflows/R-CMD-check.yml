#https://raw.githubusercontent.com/tidyverse/ggplot2/master/.github/workflows/R-CMD-check.yaml
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

name: R-CMD-check

# Increment this version when we want to clear cache
env:
  cache-version: v3

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'oldrel'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}


    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      # don't treat missing suggested packages as error
      _R_CHECK_FORCE_SUGGESTS_: false
      # Some packages might unavailable on the older versions, so let's ignore xref warnings
      _R_CHECK_RD_XREFS_: ${{ matrix.config.xref }}
      # Runs vdiffr test only on the latest version of R
      #VDIFFR_RUN_TESTS: ${{ matrix.config.vdiffr }}
      #VDIFFR_LOG_PATH: "../vdiffr.Rout.fail"

    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
          extra-packages: |
            rcmdcheck

      - uses: r-lib/actions/check-r-package@v2
        with:
          build_args: 'c("--no-manual", "--no-build-vignettes")'
          args: 'c("--no-manual", "--as-cran", "--ignore-vignettes")'


#       - uses: r-lib/actions/setup-r@master
#         with:
#           r-version: ${{ matrix.config.r }}

#       - uses: r-lib/actions/setup-pandoc@master

#       - name: Query dependencies
#         run: |
#           install.packages('remotes')
#           saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
#         shell: Rscript {0}

#       - name: Cache R packages
#         if: runner.os != 'Windows'
#         uses: actions/cache@v1
#         with:
#           path: ${{ env.R_LIBS_USER }}
#           key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
#           restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-

#       - name: Install system dependencies on Linux
#         if: runner.os == 'Linux'
#         env:
#           RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
#         run: |
#           sudo apt-get install -y libcurl4-openssl-dev
#           Rscript -e "remotes::install_github('r-hub/sysreqs')"
#           sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
#           sudo -s eval "$sysreqs"

#       - name: Install dependencies
#         run: |
#           remotes::install_deps(dependencies = TRUE)
#           remotes::install_cran("rcmdcheck")
#         shell: Rscript {0}

#       - name: Check
#         run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
#         shell: Rscript {0}

#       - name: Upload check results
#         if: failure()
#         uses: actions/upload-artifact@master
#         with:
#           name: ${{ runner.os }}-r${{ matrix.config.r }}-results
#           path: check
# #

